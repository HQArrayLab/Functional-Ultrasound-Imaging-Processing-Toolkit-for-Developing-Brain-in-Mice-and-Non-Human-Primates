clc
clear
close all
% Add path to deconvolution functions
addpath('./for_Deconvolution/');
% Enter the growth_data.fig generated by intensity_changes.m
fig = openfig('D:\2345Downloads\free_moving\250307\intensity\2\growth_data.fig');
line_objs = findobj(fig, 'Type', 'line');

%%
% Sort by YData of Line Objects
mean_ydata = zeros(1, numel(line_objs));
for i = 1:numel(line_objs)
    mean_ydata(i) = mean(line_objs(i).YData);
end

[~, idx] = sort(mean_ydata);
line_objs = line_objs(idx);


for i = 1:numel(line_objs)
    line_obj = line_objs(i);
    xdata = line_obj.XData; 
    ydata = line_obj.YData;  
    xdata_all{i} = xdata;
    ydata_all{i} = ydata;
end

for i = 1:numel(line_objs)
    data = [xdata_all{i}; ydata_all{i}]';
    filename = sprintf('line%d_data.txt', i);
    dlmwrite(filename, data, 'delimiter', '\t');
end

data4 = load('line1_data.txt');
data3 = load('line2_data.txt');
data2 = load('line3_data.txt');
data1 = load('line4_data.txt');

figure;

subplot(4,1,1);
plot(data1(:, 1), data1(:, 2), 'LineWidth', 0.5,'Color','r');
axis off
subplot(4,1,2);
plot(data2(:, 1), data2(:, 2), 'LineWidth', 0.5,'Color','b');
axis off
subplot(4,1,3);
plot(data3(:, 1), data3(:, 2), 'LineWidth', 0.5,'Color','g');
axis off
subplot(4,1,4);
plot(data4(:, 1), data4(:, 2), 'LineWidth', 0.5,'Color',[0.63 0.13 0.94]);
axis off

x1=data1(:,1).';
y1=data1(:,2).';
x2=data2(:,1).';
y2=data2(:,2).';
x3=data3(:,1).';
y3=data3(:,2).';
x4=data4(:,1).';
y4=data4(:,2).';

y1=y1-mean(y1);
y2=y2-mean(y2);
y3=y3-mean(y3);
y4=y4-mean(y4);

figure
subplot(4,1,1)
plot(y1)
subplot(4,1,2)
plot(y2)
subplot(4,1,3)
plot(y3)
subplot(4,1,4)
plot(y4)

Column=200;
L=length(x1);
Row=floor(L/Column);

Y1=fft(y1,L);
Y2=fft(y2,L);
Y3=fft(y3,L);
Y4=fft(y4,L);

Y2Y1=Y2./Y1;
Y3Y1=Y3./Y1;
Y4Y1=Y4./Y1;
y2d=ifft(Y2Y1);
y3d=ifft(Y3Y1);
y4d=ifft(Y4Y1);

% filter
fc = 0.3/10; 
[b,a] = butter(4,fc,'high');
y2d = filter(b,a,y2d);
y3d = filter(b,a,y3d);
y4d = filter(b,a,y4d);



Y1 = Y1(1:L/2+1); 
P1= abs(Y1); 
P1= P1*2;
Y2 = Y2(1:L/2+1); 
P2= abs(Y2); 
P2= P2*2;
Y3 = Y3(1:L/2+1); 
P3= abs(Y3); 
P3= P3*2;
Y4 = Y4(1:L/2+1); 
P4= abs(Y4); 
P4= P4*2;

Fs=20;
f = (0:L/2)*(Fs/L); 

figure
subplot(4,1,1)
plot(f,P1)
subplot(4,1,2)
plot(f,P2)
subplot(4,1,3)
plot(f,P3)
subplot(4,1,4)
plot(f,P4)


figure
subplot(4,1,1)
plot(y1)
subplot(4,1,2)
plot(y2d)
subplot(4,1,3)
plot(y3d)
subplot(4,1,4)
plot(y4d)


y1cut=reshape(y1(1:Column*Row),Column,Row).';
y2cut=reshape(y2d(1:Column*Row),Column,Row).';
y3cut=reshape(y3d(1:Column*Row),Column,Row).';
y4cut=reshape(y4d(1:Column*Row),Column,Row).';

means1=mean(y1cut,1);
means2=mean(y2cut,1);
means3=mean(y3cut,1);
means4=mean(y4cut,1);

t=0.05:1/20:Column/20;
figure
plot(t,means1+0.8, 'color', '0.85,0.33,0.10')
hold on
plot(t,means2+0.4, 'color', '0.00,0.45,0.74')
hold on
plot(t,means3+0.2, 'color','0.47,0.67,0.19')
hold on
plot(t,means4, 'color','0.49,0.18,0.56')
hold off

figure
set(gcf, 'WindowState', 'maximized'); 
[pymatrix2,NREMREMmat2,percent2]=calculation(y2cut,y2d,Row,Column);
figure
tiledlayout(4,1)
ax1 = nexttile;
plot(y2d)
title('forebrain')
% ylim([-0.2,0.2]);
axis off

ax2 = nexttile;
pymatrix2=pymatrix2.';

t=1:1:Row;
colormap(gca,jet);
imagesc(t,f,10*log10(pymatrix2))
axis xy
colormap(ax2,jet);
saveas(gcf, 'spectrogram')
h=colorbar;
% set(h,'Limits',[-55 -35])
h.Label.String = 'Power/Frequency(dB/Hz)';
ylabel('Frequencies')
xlabel('Seconds')

NREMREMmat2 = flipud(NREMREMmat2);
ax3 = nexttile;
imagesc(NREMREMmat2)

cmap1 = judgeMatrix(NREMREMmat2);


colormap(ax3, cmap1);
axis equal
axis off
set(gca,'PlotBoxAspectRatio',[1 1 1],'PlotBoxAspectRatioMode','auto')
saveas(gcf,'stageforebrain')

figure
set(gcf, 'WindowState', 'maximized'); 
[pymatrix3,NREMREMmat3,percent3]=calculation(y3cut,y3d,Row,Column);
figure
tiledlayout(4,1)
ax1 = nexttile;
plot(y3d)
title('midbrain')
% ylim([-0.2,0.2]);
axis off


ax2 = nexttile;
pymatrix3=pymatrix3.';

t=1:1:Row;
colormap(gca,jet);
imagesc(t,f,10*log10(pymatrix3))
axis xy
colormap(ax2,jet);
saveas(gcf, 'spectrogram')
h=colorbar;
% set(h,'Limits',[-55 -35])
h.Label.String = 'Power/Frequency(dB/Hz)';
ylabel('Frequencies')
xlabel('Seconds')

NREMREMmat3 = flipud(NREMREMmat3);
ax3 = nexttile;
imagesc(NREMREMmat3)

cmap1 = judgeMatrix(NREMREMmat3);


colormap(ax3, cmap1);
axis equal
axis off
set(gca,'PlotBoxAspectRatio',[1 1 1],'PlotBoxAspectRatioMode','auto')
saveas(gcf,'stagemidbrain')

figure
set(gcf, 'WindowState', 'maximized'); 
[pymatrix4,NREMREMmat4,percent4]=calculation(y4cut,y4d,Row,Column);
figure
tiledlayout(4,1)
ax1 = nexttile;
plot(y4d)
title('hindbrain')
% ylim([-0.2,0.2]);
axis off

ax2 = nexttile;
pymatrix4=pymatrix4.';

t=1:1:Row;
colormap(gca,jet);
imagesc(t,f,10*log10(pymatrix4))
axis xy
colormap(ax2,jet);
saveas(gcf, 'spectrogram')
h=colorbar;
% set(h,'Limits',[-55 -35])
h.Label.String = 'Power/Frequency(dB/Hz)';
ylabel('Frequencies')
xlabel('Seconds')

NREMREMmat4 = flipud(NREMREMmat4);
ax3 = nexttile;
imagesc(NREMREMmat4)

cmap1 = judgeMatrix(NREMREMmat4);


colormap(ax3, cmap1);
axis equal
axis off
set(gca,'PlotBoxAspectRatio',[1 1 1],'PlotBoxAspectRatioMode','auto')
saveas(gcf,'stagehindbrain')

percentmatrix=[percent2;percent3;percent4];
figure
barimage=bar(percentmatrix); 
set(barimage(1),'FaceColor',[0.81,0.68,0.84])     
set(barimage(2),'FaceColor',[0.51,0.78,0.97])    
set(barimage(3),'FaceColor',[0.97,0.80,0.40])  
legend({'\fontname{Times New Roman}REM', ...
    '\fontname{Times New Roman}NREM', ...
    '\fontname{Times New Roman}WAKE'})


combined_co = [percent2 percent3 percent4];
tablecorelation = array2table(combined_co, 'VariableNames', {'REMforbrain','NREMforbrain','WAKEforbrain','REMmidbrain','NREMmidbrain','WAKEmidbrain','REMhindbrain','NREMhindbrain','WAKEhindbrain'});
writetable(tablecorelation, 'brain_combined_stage.csv');



sound1=10*log10(pymatrix2);
[~,idx] = max(sound1,[],1); 
fs=44100;
t=0: 1/fs: 0.5;
do=[];
for i=1:length(idx)
    do=[do;sin(2*pi*(293.66+ idx(i))*t)];
end
v1 = reshape(do.',[],1);
% sound(v1,fs);
audio = v1/max(abs(v1));
audiowrite('forebrain.wav', audio, fs);

sound2=10*log10(pymatrix3);
[~,idx] = max(sound2,[],1); 
fs=44100;
t=0: 1/fs: 0.5;
do=[];
for i=1:length(idx)
    do=[do;sin(2*pi*(329.63+ idx(i))*t)];
end
v2 = reshape(do.',[],1);
% sound(v2,fs);
audio = v2/max(abs(v2));
audiowrite('midbrain.wav', audio, fs);

sound3=10*log10(pymatrix4);
[~,idx] = max(sound3,[],1); 
fs=44100;
t=0: 1/fs: 0.5;
do=[];
for i=1:length(idx)
    do=[do;sin(2*pi*(392+ idx(i))*t)];
end
v3 = reshape(do.',[],1);
% sound(v3,fs);
audio = v3/max(abs(v3));
audiowrite('hindbrain.wav', audio, fs);

v=[v1,v2,v3];
audio = v/max(abs(v));
audiowrite('brain.wav', audio, fs);